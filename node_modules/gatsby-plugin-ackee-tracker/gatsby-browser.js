"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.onInitialClientRender = onInitialClientRender;
exports.onRouteUpdate = onRouteUpdate;

var ackeeTracker = _interopRequireWildcard(require("ackee-tracker"));

var trackerInstance = false;
/**
 * onInitialClientRender
 *
 * Adds Ackee Tracker to website when it renders page
 *
 * @export onInitialClientRender
 * @param {*} { domainId, server, ignoreLocalhost, detailed }
 * @param boolean record instance
 */

var AckeeTraker = function AckeeTraker(_ref, record) {
  var domainId = _ref.domainId,
      server = _ref.server,
      ignoreLocalhost = _ref.ignoreLocalhost,
      detailed = _ref.detailed;

  // checks if domainID and Server is present and also if tracker is null then create tracking instance
  if (domainId && server && trackerInstance === false) {
    trackerInstance = ackeeTracker.create({
      server: server,
      domainId: domainId
    }, {
      ignoreLocalhost: ignoreLocalhost,
      detailed: detailed
    }); //Tracks initial Page

    trackerInstance.record();
  } // checks if record is true and that the tracker instance exists


  if (record && trackerInstance) {
    // records update on new pages
    trackerInstance.record();
  }
};
/**
 * onInitialClientRender
 *
 * Adds Ackee Tracker to website when it renders page
 *
 * @export onInitialClientRender
 * @param {*} _
 * @param {*} { domainId, server, ignoreLocalhost, detailed }
 */


function onInitialClientRender(_, _ref2) {
  var domainId = _ref2.domainId,
      server = _ref2.server,
      ignoreLocalhost = _ref2.ignoreLocalhost,
      detailed = _ref2.detailed;
  AckeeTraker({
    domainId: domainId,
    server: server,
    ignoreLocalhost: ignoreLocalhost,
    detailed: detailed
  }, false);
}
/**
 * onRouteUpdate
 *
 * Added function call to where an instrance of the tracker is and calls a update of that tracker
 *
 * @export onRouteUpdate
 */


function onRouteUpdate() {
  // record attributes
  AckeeTraker(false, true);
}